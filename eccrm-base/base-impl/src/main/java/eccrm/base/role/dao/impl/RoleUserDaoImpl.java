package eccrm.base.role.dao.impl;

import com.ycrl.core.HibernateDaoHelper;
import eccrm.base.role.dao.RoleUserDao;
import eccrm.base.role.domain.RoleUser;
import eccrm.utils.Argument;
import org.hibernate.Session;
import org.hibernate.criterion.Projections;
import org.hibernate.criterion.Restrictions;
import org.springframework.stereotype.Repository;

import java.util.List;


/**
 * Generated by miles on 2014-07-21.
 */

@Repository("roleUserDao")
public class RoleUserDaoImpl extends HibernateDaoHelper implements RoleUserDao {

    @Override
    public String save(RoleUser roleUser) {
        return (String) getSession().save(roleUser);
    }

    @Override
    @SuppressWarnings("unchecked")
    public List<RoleUser> queryByUserId(String userId) {
        Argument.isEmpty(userId, "根据用户ID查询所属用户组时,用户ID不能为空!");
        return createCriteria(RoleUser.class)
                .add(Restrictions.eq("user.id", userId))
                .list();
    }

    @Override
    public void deleteByUserId(String userId) {
        Argument.isEmpty(userId, "根据用户ID删除对应的所有角色时,用户ID不能为空!");
        getSession().createQuery("delete from " + RoleUser.class.getName() + " ru where ru.user.id=?")
                .setParameter(0, userId)
                .executeUpdate();
    }

    @Override
    public void deleteByIds(String[] ids) {
        Argument.isNull(ids, "根据ID删除角色与用户的关系时,ID不能为空!");
        Session session = getSession();
        for (String id : ids) {
            session.delete(session.load(RoleUser.class, id));
        }
    }

    @Override
    @SuppressWarnings("unchecked")
    public List<String> queryRoleIds(String userId) {
        Argument.isEmpty(userId, "根据用户ID查询对应的所有角色ID时,用户ID不能为空!");
        return createCriteria(RoleUser.class)
                .setProjection(Projections.property("role.id"))
                .add(Restrictions.eq("user.id", userId))
                .list();
    }
}