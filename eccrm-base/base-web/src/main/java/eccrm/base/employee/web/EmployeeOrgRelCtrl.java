package eccrm.base.employee.web;

import com.ycrl.core.pager.PageVo;
import com.ycrl.core.web.BaseController;
import com.ycrl.utils.gson.GsonUtils;
import eccrm.base.employee.bo.EmployeeOrgRelBo;
import eccrm.base.employee.domain.EmployeeOrgRel;
import eccrm.base.employee.service.EmployeeOrgRelService;
import eccrm.base.employee.vo.EmployeeOrgRelVo;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
* Generated by yanhx on 2014-10-13.
*/

@Controller
@RequestMapping(value = {"/wanda/orgEmp"})
public class EmployeeOrgRelCtrl extends BaseController {
    @Resource
    private EmployeeOrgRelService employeeOrgRelService;

    @RequestMapping(value = {""}, method=RequestMethod.GET )
    public String toList() {
        return "base/org/list/orgEmp_list.jsp";
    }

    @RequestMapping(value = "/add", method = RequestMethod.GET)
    public String toAdd(HttpServletRequest request) {
        request.setAttribute("pageType", "add");
        return "employeeOrgRel/employeeOrgRel/edit/employeeOrgRel_edit";
    }

    @RequestMapping(value = "/save", method = RequestMethod.POST)
    @ResponseBody
    public void save(HttpServletRequest request, HttpServletResponse response) {
        EmployeeOrgRel employeeOrgRel = GsonUtils.wrapDataToEntity(request, EmployeeOrgRel.class);
        employeeOrgRelService.save(employeeOrgRel);
        GsonUtils.printSuccess(response);
    }

    @RequestMapping(value = "/modify", params = {"id"}, method = RequestMethod.GET)
    public String toModify(@RequestParam String id, HttpServletRequest request) {
        request.setAttribute("pageType","modify");
        request.setAttribute("id", id);
        return "employeeOrgRel/employeeOrgRel/edit/employeeOrgRel_edit";
    }

    @RequestMapping(value = "/update", method = RequestMethod.PUT)
    @ResponseBody
    public void update(HttpServletRequest request, HttpServletResponse response) {
        EmployeeOrgRel employeeOrgRel = GsonUtils.wrapDataToEntity(request, EmployeeOrgRel.class);
        employeeOrgRelService.update(employeeOrgRel);
        GsonUtils.printSuccess(response);
    }


    @RequestMapping(value = {"/detail"}, params = {"id"}, method = RequestMethod.GET)
    public String toDetail(@RequestParam String id, HttpServletRequest request) {
        request.setAttribute("pageType", "detail");
        request.setAttribute("id", id);
        return "employeeOrgRel/employeeOrgRel/edit/employeeOrgRel_edit";
    }

    @ResponseBody
    @RequestMapping(value = "/get", params = {"id"}, method = RequestMethod.GET)
    public void findById(@RequestParam String id, HttpServletResponse response) {
        EmployeeOrgRelVo vo = employeeOrgRelService.findById(id);
        GsonUtils.printData(response, vo);
    }


    @ResponseBody
    @RequestMapping(value = "/query", method = RequestMethod.POST)
    public void query(HttpServletRequest request, HttpServletResponse response) {
        EmployeeOrgRelBo bo = GsonUtils.wrapDataToEntity(request, EmployeeOrgRelBo.class);
        PageVo pageVo = employeeOrgRelService.query(bo);
        GsonUtils.printData(response, pageVo);
    }

    @ResponseBody
    @RequestMapping(value = "/delete", params = {"ids"}, method = RequestMethod.DELETE)
    public void deleteByIds(@RequestParam String ids, HttpServletResponse response) {
        String[] idArr = ids.split(",");
        employeeOrgRelService.deleteByIds(idArr);
        GsonUtils.printSuccess(response);
    }

}
