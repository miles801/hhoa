package ${packagePath}.web;

import com.ycrl.core.web.BaseController;
import com.ycrl.utils.gson.GsonUtils;
import eccrm.core.constant.JspAccessType;
import com.ycrl.core.pager.PageVo;
import ${packagePath}.bo.${entity}Bo;
import ${packagePath}.domain.${entity};
import ${packagePath}.service.${entity}Service;
import ${packagePath}.vo.${entity}Vo;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * Generated by <#if author??>${author}</#if> on <#if current??>${current}</#if>.
 */
@Controller
@RequestMapping(value = {"/${module}/${lowerEntity}"})
@Scope(value = "prototype")
public class ${entity}Ctrl extends BaseController {
    @Resource
    private ${entity}Service ${lowerEntity}Service;

    @RequestMapping(value = {""}, method = RequestMethod.GET )
    public String toList() {
        return "${module}/${lowerEntity}/list/${lowerEntity}_list";
    }

    @RequestMapping(value = "/add", method = RequestMethod.GET)
    public String toAdd(HttpServletRequest request) {
        request.setAttribute(JspAccessType.PAGE_TYPE, JspAccessType.ADD);
        return "${module}/${lowerEntity}/edit/${lowerEntity}_edit";
    }

    @RequestMapping(value = "/save", method = RequestMethod.POST)
    @ResponseBody
    public void save(HttpServletRequest request, HttpServletResponse response) {
        ${entity} ${lowerEntity} = GsonUtils.wrapDataToEntity(request, ${entity}.class);
        ${lowerEntity}Service.save(${lowerEntity});
        GsonUtils.printSuccess(response);
    }

    @RequestMapping(value = "/modify", params = {"id"}, method = RequestMethod.GET)
    public String toModify(@RequestParam String id, HttpServletRequest request) {
        request.setAttribute(JspAccessType.PAGE_TYPE, JspAccessType.MODIFY);
        request.setAttribute("id", id);
        return "${module}/${lowerEntity}/edit/${lowerEntity}_edit";
    }

    @RequestMapping(value = "/update", method = RequestMethod.PUT)
    @ResponseBody
    public void update(HttpServletRequest request, HttpServletResponse response) {
        ${entity} ${lowerEntity} = GsonUtils.wrapDataToEntity(request, ${entity}.class);
        ${lowerEntity}Service.update(${lowerEntity});
        GsonUtils.printSuccess(response);
    }


    @RequestMapping(value = {"/detail"}, params = {"id"}, method = RequestMethod.GET)
    public String toDetail(@RequestParam String id, HttpServletRequest request) {
        request.setAttribute(JspAccessType.PAGE_TYPE, JspAccessType.DETAIL);
        request.setAttribute("id", id);
        return "${module}/${lowerEntity}/edit/${lowerEntity}_edit";
    }

    @ResponseBody
    @RequestMapping(value = "/get", params = {"id"}, method = RequestMethod.GET)
    public void findById(@RequestParam String id, HttpServletResponse response) {
        ${entity}Vo vo = ${lowerEntity}Service.findById(id);
        GsonUtils.printData(response, vo);
    }


    @ResponseBody
    @RequestMapping(value = "/query", method = RequestMethod.POST)
    public void query(HttpServletRequest request, HttpServletResponse response) {
        ${entity}Bo bo = GsonUtils.wrapDataToEntity(request, ${entity}Bo.class);
        PageVo pageVo = ${lowerEntity}Service.query(bo);
        GsonUtils.printData(response, pageVo);
    }

    @ResponseBody
    @RequestMapping(value = "/delete", params = {"ids"}, method = RequestMethod.DELETE)
    public void deleteByIds(@RequestParam String ids, HttpServletResponse response) {
        String[] idArr = ids.split(",");
        ${lowerEntity}Service.deleteByIds(idArr);
        GsonUtils.printSuccess(response);
    }

}
