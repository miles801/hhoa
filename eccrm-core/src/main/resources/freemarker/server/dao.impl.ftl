package ${packagePath}.dao.impl;

import ${packagePath}.bo.${entity}Bo;
import ${packagePath}.domain.${entity};
import ${packagePath}.dao.${entity}Dao;
import com.ycrl.core.HibernateDaoHelper;
import org.hibernate.criterion.Example;
import org.hibernate.Criteria;
import org.hibernate.criterion.MatchMode;
import org.springframework.stereotype.Repository;

import java.util.List;


/**
 * Generated by <#if author??>${author}</#if> on <#if current??>${current}</#if>.
 */
@Repository("${lowerEntity}Dao")
public class ${entity}DaoImpl extends HibernateDaoHelper implements ${entity}Dao {

    @Override
    public String save(${entity} ${lowerEntity}) {
        return (String)getSession().save(${lowerEntity});
    }

    @Override
    public void update(${entity} ${lowerEntity}) {
        getSession().update(${lowerEntity});
    }

    @Override
    public List<${entity}> query(${entity}Bo bo) {
        Criteria criteria = getDefaultCriteria(bo);
        // TODO 请添加默认要进行排序的字段
        return criteria.list();
    }

    @Override
    public long getTotal(${entity}Bo bo) {
        Criteria criteria = createRowCountsCriteria(${entity}.class);
        initCriteria(criteria, bo);
        return (Long) criteria.uniqueResult();
    }


    @Override
    public void deleteById(String id) {
        getSession().createQuery("delete from "+${entity}.class.getName()+" tmp where tmp.id=?")
        .setParameter(0, id)
        .executeUpdate();
    }

    @Override
    public ${entity} findById(String id) {
        return (${entity}) getSession().get(${entity}.class, id);
    }

    /**
    * 获得默认的org.hibernate.Criteria对象,并根据bo进行初始化（如果bo为null，则会新建一个空对象）
    * 为了防止新的对象中有数据，建议实体/BO均采用封装类型
    */
    private Criteria getDefaultCriteria(${entity}Bo bo){
        Criteria criteria = createCriteria(${entity}.class);
        initCriteria(criteria, bo);
        return criteria;
    }

    /**
    *  根据BO初始化org.hibernate.Criteria对象
    *  如果org.hibernate.Criteria为null，则抛出异常
    *  如果BO为null，则新建一个空的对象
    */
    private void initCriteria(Criteria criteria, ${entity}Bo bo) {
        if (criteria == null) {
            throw new IllegalArgumentException("criteria must not be null!");
        }
        if (bo == null) bo = new ${entity}Bo();
        criteria.add(Example.create(bo).enableLike(MatchMode.ANYWHERE).ignoreCase());
        // 为了性能考虑，可以排除掉不需要使用like的属性，例如id、整形数字
        //TODO 添加其他的初始化设置
    }

}